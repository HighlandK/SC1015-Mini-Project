
#askNarelle's code:
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_openml
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# RUDRA'S VERSION, SPLIT TRAIN AND TEST DATASETS COMPLETELY
train_data = np.loadtxt('mnist_train.csv', delimiter=',', skiprows=1)
X_train = train_data[:, 1:]  # Pixel values
y_train = train_data[:, 0].astype(int)  # Labels

# Load the test data
test_data = np.loadtxt('mnist_test.csv', delimiter=',', skiprows=1)
X_test = test_data[:, 1:]  # Pixel values
y_test = test_data[:, 0].astype(int)  # Labels

# Create a logistic regression model
model = LogisticRegression(solver='lbfgs', max_iter=1000, multi_class='multinomial')

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Calculate the accuracy of the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Plot some example images and their predicted labels
fig, axes = plt.subplots(nrows=4, ncols=4, figsize=(8, 8))
for i, ax in enumerate(axes.flat):
    ax.imshow(X_test[i].reshape(28, 28), cmap='binary')
    ax.set(title = f"Predicted Label : {y_pred[i]}")
    ax.axis('off')
plt.show()
